@using RollTheDiceGmtk2022.Game
@using RollTheDiceGmtk2022Logic

@{
    var cardClass = IsEnemy ? "enemy-card" : "user-card";
}

<div class="card @cardClass" draggable="true" @ondragstart="@(() => HandleDragStart(Location))" ondragover="event.preventDefault();" @ondrop="@(() => HandleDragStop(Location))">
    @if (!IsEnemy)
    {
        <div class="oracle-dice-match-container">
            <span class="dice-match-rule">@Oracle</span>
        </div>
    }

    <div class="card-header">
        <div class="row">
            @{
                var nameCssClass = IsEnemy ? "text-danger" : "";
            }

            <div class="col-8 @nameCssClass card-header-name">
                @Card.Name
            </div>

            <div class="col-4 text-right">
                @if (!IsEnemy)
                {
                    <button type="button" @onclick="@(() => OnRemove(Location))" class="close remove-card" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                    </button>
                }

                <span class="hp">@Card.Hp</span>
            </div>
        </div>
    </div>

    <ul class="list-group list-group-flush">
        @for (var i = 0; i < Card.Slots.Count; i++)
        {
            var slot = Card.Slots[i];
            var rule = slot.Rule;
            DiceMatchRuleLocation? diceMatchRuleLocation = new DiceMatchRuleLocation(false, Location.CollectionIndex, i);
            var effectTitle = slot.Effect.Name;

            if (slot.Effect.Type == CardSlotEffectType.Attack)
            {
                effectTitle += $" ({slot.Effect.Amount})";
            }

            <li class="list-group-item">
                <div class="row">
                    <div class="col-4 border-right">
                        <PlacedDiceMatchRule Rule="@rule" Location="@diceMatchRuleLocation" OnDragStart="@OnDiceMatchRuleDragStart" OnDragStop="@OnDiceMatchRuleDragStop"></PlacedDiceMatchRule>
                    </div>

                    <div class="col-8">
                        <div><strong>@effectTitle</strong></div>
                        <div class="card-effect-description">@slot.Effect.Type.ToString() : @slot.Effect.Amount</div>
                    </div>
                </div>
            </li>
        }
    </ul>
</div>

@code {
    [Parameter]
    public DiceMatchRule Oracle { get; set; }

    [Parameter]
    public Card Card { get; set; }

    [Parameter]
    public bool IsEnemy { get; set; }

    [Parameter]
    public CardLocation Location{ get; set; }

    [Parameter]
    public Action<CardLocation> OnDragStart { get; set; }

    [Parameter]
    public Action<CardLocation> OnDragStop { get; set; }

    [Parameter]
    public Action<CardLocation> OnRemove { get; set; }

    [Parameter]
    public Action<DiceMatchRuleLocation> OnDiceMatchRuleDragStart { get; set; }

    [Parameter]
    public Action<DiceMatchRuleLocation> OnDiceMatchRuleDragStop { get; set; }


    private void HandleDragStart(CardLocation location)
    {
        if (!IsEnemy)
            OnDragStart(location);
    }

    private void HandleDragStop(CardLocation location)
    {
        if (!IsEnemy)
            OnDragStop(location);
    }
}
