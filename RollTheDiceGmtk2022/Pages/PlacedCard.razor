@using RollTheDiceGmtk2022.Game

@if (Card == null)
{
    <div class="card missing-card" ondragover="event.preventDefault();" @ondrop="@(() => HandleDragStop(Location))"></div>
}
else
{
    <div class="card" draggable="true" @ondragstart="@(() => HandleDragStart(Location))" ondragover="event.preventDefault();" @ondrop="@(() => HandleDragStop(Location))">
        <div class="card-header">
            <div class="row">
                @{
                    var nameCssClass = IsEnemy ? "text-danger" : "";
                }

                <div class="col-9 @nameCssClass card-header-name">
                    @Card.Name
                </div>

                <div class="col-3 text-right">
                    <span class="badge badge-success hp">@Card.Hp</span>
                </div>
            </div>
        </div>

        <ul class="list-group list-group-flush">
            @for (var i = 0; i < Card.Slots.Count; i++)
            {
                var slot = Card.Slots[i];
                var rule = slot.Rule;
                DiceMatchRuleLocation? diceMatchRuleLocation = new DiceMatchRuleLocation(false, Location.CollectionIndex, i);

                <li class="list-group-item">
                    <div class="row">
                        <div class="col-4 border-right">
                            <PlacedDiceMatchRule Rule="@rule" Location="@diceMatchRuleLocation" OnDragStart="@OnDiceMatchRuleDragStart" OnDragStop="@OnDiceMatchRuleDragStop"></PlacedDiceMatchRule>
                        </div>

                        <div class="col-8">
                            <div><strong>@slot.Effect.Name</strong></div>
                            <div>@slot.Effect.Type.ToString() : @slot.Effect.Amount</div>
                        </div>
                    </div>
                </li>
            }
        </ul>
    </div>

}

@code {
    [Parameter]
    public Card Card { get; set; }

    [Parameter]
    public bool IsEnemy { get; set; }

    [Parameter]
    public CardLocation Location{ get; set; }

    [Parameter]
    public Action<CardLocation> OnDragStart { get; set; }

    [Parameter]
    public Action<CardLocation> OnDragStop { get; set; }

    [Parameter]
    public Action<DiceMatchRuleLocation> OnDiceMatchRuleDragStart { get; set; }

    [Parameter]
    public Action<DiceMatchRuleLocation> OnDiceMatchRuleDragStop { get; set; }


    private void HandleDragStart(CardLocation location)
    {
        if (!IsEnemy)
            OnDragStart(location);
    }

    private void HandleDragStop(CardLocation location)
    {
        if (!IsEnemy)
            OnDragStop(location);
    }
}
